# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

"This is the interface implemented by all assets."
interface AssetInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the asset file was last modified."
    dateModified: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The file extension for the asset file."
    extension: String
    "The filename of the asset file."
    filename: String
    "The focal point represented as an array with `x` and `y` keys, or null if it's not an image."
    focalPoint: [Float]
    "The ID of the folder that the asset belongs to."
    folderId: Int
    "Whether a user-defined focal point is set on the asset."
    hasFocalPoint: Boolean
    "The height in pixels or null if it's not an image."
    height(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
    "The id of the entity"
    id: ID
    "Returns a list of images produced from the named Imager X transform."
    imagerTransform(
        "The handle of the named transform you want to generate."
        transform: String
    ): [ImagerTransformedImageInterface]
    "An `<img>` tag based on this asset."
    img: String
    "The file kind."
    kind: String
    "The language of the site element is associated with."
    language: String
    "The file’s MIME type, if it can be determined."
    mimeType: String
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The asset's path in the volume."
    path: String
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The file size in bytes."
    size: String
    "The element’s slug."
    slug: String
    "Returns a `srcset` attribute value based on the given widths or x-descriptors."
    srcset(
        "A list of size descriptors. If you pass x-descriptors, it will be assumed that the image’s current width is the indented 1x width."
        sizes: [String!]!
    ): String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The user who first added this asset (if known)."
    uploader(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String]
    ): UserInterface
    "The ID of the user who first added this asset (if known)."
    uploaderId: Int
    "The element’s URI."
    uri: String
    "The full URL of the asset. This field accepts the same fields as the `transform` directive."
    url(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): String
    "The ID of the volume that the asset belongs to."
    volumeId: Int
    "The width in pixels or null if it's not an image."
    width(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
}

"This is the interface implemented by all categories."
interface CategoryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The category’s children."
    children(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The handle of the group that contains the category."
    groupHandle: String
    "The ID of the group that contains the category."
    groupId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface]
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): CategoryInterface
    "The category’s parent."
    parent(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): CategoryInterface
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): CategoryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

"This is the interface implemented by all elements."
interface ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

"This is the interface implemented by all entries."
interface EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The creator of a given draft."
    draftCreator: UserInterface
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    "Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

"This is the interface implemented by all fields."
interface FieldInterface {
    "The field’s conditions."
    conditions: String
    "The field’s container attributes."
    containerAttributes: [FieldAttribute]
    "The field’s CSS classes."
    cssClasses: String
    "The field’s display name."
    displayName: String
    "Whether the field has conditions enabled."
    enableConditions: Boolean
    "Whether the field has content encryption enabled."
    enableContentEncryption: Boolean
    "The field’s error message."
    errorMessage: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    "Whether the field should be included in email content."
    includeInEmail: Boolean
    "The field’s input attributes."
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    "The field’s instructions position."
    instructionsPosition: String
    "The field’s label position."
    labelPosition: String
    "Whether the field should limit content."
    limit: Boolean
    "The field’s limit amount."
    limitAmount: Int
    "The field’s limit type."
    limitType: String
    "The field’s name."
    name: String
    "The field’s placeholder."
    placeholder: String
    "Whether the field is required."
    required: Boolean
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    "The field’s visibility."
    visibility: String
}

"This is the interface implemented by all forms."
interface FormInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The form’s config as JSON."
    configJson: String
    "A CSRF token (name and value)"
    csrfToken: FormieCsrfTokenType
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The form’s fields."
    fields: [FieldInterface]
    "The form’s handle."
    handle: String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The form’s pages."
    pages: [PageInterface]
    "The form’s rows."
    rows: [RowInterface]
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The form’s settings."
    settings: FormSettingsType
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The form’s rendered HTML."
    templateHtml(
        "The form template HTML will be rendered with these JSON serialized options."
        options: String,
        "The form field values will be populated with these JSON serialized options."
        populateFormValues: String
    ): String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

"This is the interface implemented by Imager X."
interface ImagerTransformedImageInterface {
    "Extension of transformed image."
    extension: String
    "Filename of transformed image."
    filename: String
    "Height of transformed image."
    height: Int
    "The id of the entity"
    id: ID
    "Size of transformed image."
    isNew: Boolean
    "Mime type of transformed image."
    mimeType: String
    "Path to transformed image."
    path: String
    "Size of transformed image."
    size: Int
    "The uid of the entity"
    uid: String
    "URL for transformed image."
    url: String
    "Width of transformed image."
    width: Int
}

"This is the interface implemented by all matrix blocks."
interface MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

"This is the interface implemented by all neo blocks."
interface NeoBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the neo block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The Neo block's level."
    level: Int
    "The ID of the element that owns the neo block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the neo block's type."
    typeHandle: String
    "The ID of the neo block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

"This is the interface implemented by all nodes."
interface NodeInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The node’s children. Accepts the same arguments as the `nodes` query."
    children(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        highlight: Boolean,
        icon: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results based on the navigation the node belongs to."
        nav: [String],
        "Narrows the query results based on the provided navigation handle."
        navHandle: String,
        "Narrows the query results based on the provided navigation ID."
        navId: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the node’s type."
        type: [String],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [NodeInterface]
    "Any additional classes for the node."
    classes: String
    "Any additional custom attributes for the node."
    customAttributes: [NodeCustomAttribute]
    "Any additional data for the node."
    data: String
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The element the node links to."
    element: ElementInterface
    "The ID of the element this node is linked to."
    elementId: Int
    "Whether the element is enabled or not."
    enabled: Boolean
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The handle of the navigation this node belongs to."
    navHandle: String
    "The ID of the navigation this node belongs to."
    navId: Int
    "The name of the navigation this node belongs to."
    navName: String
    "Whether this node should open in a new window."
    newWindow: String
    "The node’s URI"
    nodeUri: String
    "The node’s parent."
    parent: NodeInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The type of node this is."
    type: String
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The node’s full URL"
    url: String
    "The URL for this navigation item."
    urlSuffix: String
}

"This is the interface implemented by all pages."
interface PageInterface {
    "The page’s fields."
    fields: [FieldInterface]
    "The id of the entity"
    id: ID
    "The page’s name."
    name: String
    "The page’s rows."
    rows: [RowInterface]
    "The page’s settings."
    settings: PageSettingsInterface
    "The uid of the entity"
    uid: String
}

"This is the interface implemented by all pages."
interface PageSettingsInterface {
    "The page’s back button label."
    backButtonLabel: String
    "The page’s button positions."
    buttonsPosition: String
    "The id of the entity"
    id: ID
    "Whether to show the page’s back button."
    showBackButton: Boolean
    "The page’s submit button label."
    submitButtonLabel: String
    "The uid of the entity"
    uid: String
}

"This is the interface implemented by all rows."
interface RowInterface {
    "The row’s fields."
    fields: [FieldInterface]
    "The id of the entity"
    id: ID
    "The uid of the entity"
    uid: String
}

"This is the interface implemented by SEOmatic."
interface SeomaticInterface {
    "The FrontendTemplateContainer SEOmatic container."
    frontendTemplateContainer: String
    "The MetaJsonLdContainer SEOmatic container."
    metaJsonLdContainer: String
    "The MetaLinkContainer SEOmatic container."
    metaLinkContainer: String
    "The MetaScriptContainer SEOmatic container."
    metaScriptContainer: String
    "The MetaSiteVarsContainer SEOmatic container."
    metaSiteVarsContainer: String
    "The MetaTagContainer SEOmatic container."
    metaTagContainer: String
    "The MetaTitleContainer SEOmatic container."
    metaTitleContainer: String
}

"This is the interface implemented by all submissions."
interface SubmissionInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The submission’s status."
    status: String
    "The submission’s status ID."
    statusId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

"This is the interface implemented by all Super Table blocks."
interface SuperTableBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the Super Table block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the Super Table block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The sort order of the Super Table block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The ID of the Super Table block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

"This is the interface implemented by all tags."
interface TagInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The handle of the group that contains the tag."
    groupHandle: String
    "The ID of the group that contains the tag."
    groupId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

"This is the interface implemented by all users."
interface UserInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The user's email."
    email: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The user's first name."
    firstName: String
    "The user's first name or username."
    friendlyName: String
    "The user's full name."
    fullName: String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The user's last name."
    lastName: String
    "The user's full name or username."
    name: String
    "The user’s preferences."
    preferences: String
    "The user’s preferred language."
    preferredLanguage: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The username."
    username: String
}

"This is the interface implemented by all fields."
interface VizyBlockInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

"This is the interface implemented by all fields."
interface VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

union cards_MatrixField = cards_card_BlockType

union contentRows_NeoField = contentRows_rowContent_BlockType | contentRows_rowSpacer_BlockType

union resources_MatrixField = resources_resource_BlockType

union socialMediaLinks_SuperTableField = socialMediaLinks_BlockType

type Element implements ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type FieldAttribute {
    label: String
    value: String
}

type Field_Address implements FieldInterface {
    address1Collapsed: Boolean
    address1DefaultValue: String
    address1Enabled: Boolean
    address1ErrorMessage: String
    address1Hidden: Boolean
    address1Label: String
    address1Placeholder: String
    address1PrePopulate: String
    address1Required: Boolean
    address2Collapsed: Boolean
    address2DefaultValue: String
    address2Enabled: Boolean
    address2ErrorMessage: String
    address2Hidden: Boolean
    address2Label: String
    address2Placeholder: String
    address2PrePopulate: String
    address2Required: Boolean
    address3Collapsed: Boolean
    address3DefaultValue: String
    address3Enabled: Boolean
    address3ErrorMessage: String
    address3Hidden: Boolean
    address3Label: String
    address3Placeholder: String
    address3PrePopulate: String
    address3Required: Boolean
    autocompleteCollapsed: Boolean
    autocompleteDefaultValue: String
    autocompleteEnabled: Boolean
    autocompleteErrorMessage: String
    autocompleteIntegration: String
    autocompleteLabel: String
    autocompletePlaceholder: String
    autocompletePrePopulate: String
    autocompleteRequired: String
    cityCollapsed: Boolean
    cityDefaultValue: String
    cityEnabled: Boolean
    cityErrorMessage: String
    cityHidden: Boolean
    cityLabel: String
    cityPlaceholder: String
    cityPrePopulate: String
    cityRequired: Boolean
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    countryCollapsed: Boolean
    countryDefaultValue: String
    countryEnabled: Boolean
    countryErrorMessage: String
    countryHidden: Boolean
    countryLabel: String
    countryOptions: [FieldAttribute]
    countryPlaceholder: String
    countryPrePopulate: String
    countryRequired: Boolean
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableAutocomplete: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    "The field’s name."
    name: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    stateCollapsed: Boolean
    stateDefaultValue: String
    stateEnabled: Boolean
    stateErrorMessage: String
    stateHidden: Boolean
    stateLabel: String
    statePlaceholder: String
    statePrePopulate: String
    stateRequired: Boolean
    subfieldLabelPosition: String
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
    zipCollapsed: Boolean
    zipDefaultValue: String
    zipEnabled: Boolean
    zipErrorMessage: String
    zipHidden: Boolean
    zipLabel: String
    zipPlaceholder: String
    zipPrePopulate: String
    zipRequired: Boolean
}

type Field_Agree implements FieldInterface {
    checkedValue: String
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultState: Boolean
    description: String
    descriptionHtml: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    "The field’s name."
    name: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    uncheckedValue: String
    visibility: String
}

type Field_Categories implements FieldInterface {
    allowLimit: String
    allowMultipleSources: String
    allowSelfRelations: String
    branchLimit: String
    categories(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface]
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    displayType: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    labelSource: String
    limit: Boolean
    limitAmount: Int
    limitOptions: String
    limitType: String
    localizeRelations: String
    "The field’s name."
    name: String
    orderBy: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    searchable: String
    selectionLabel: String
    showSiteMenu: String
    source: String
    sources: String
    targetSiteId: String
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    validateRelatedElements: String
    viewMode: String
    visibility: String
}

type Field_Checkboxes implements FieldInterface {
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    layout: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    multi: String
    "The field’s name."
    name: String
    options: [KeyValueType]
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    toggleCheckbox: String
    toggleCheckboxLabel: String
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
}

type Field_Date implements FieldInterface {
    ampmLabel: String
    ampmPlaceholder: String
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    dateFormat: String
    dayLabel: String
    dayPlaceholder: String
    defaultDate: DateTime
    defaultOption: String
    "The field’s display name."
    displayName: String
    displayType: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    hourLabel: String
    hourPlaceholder: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    includeTime: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    maxDate: DateTime
    minDate: DateTime
    minuteLabel: String
    minutePlaceholder: String
    monthLabel: String
    monthPlaceholder: String
    "The field’s name."
    name: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    secondLabel: String
    secondPlaceholder: String
    subfieldLabelPosition: String
    timeFormat: String
    timeLabel: String
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    useDatePicker: Boolean
    visibility: String
    yearLabel: String
    yearPlaceholder: String
}

type Field_Dropdown implements FieldInterface {
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    multi: String
    multiple: Boolean
    "The field’s name."
    name: String
    optgroups: String
    options: [KeyValueType]
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
}

type Field_Email implements FieldInterface {
    blockedDomains: [KeyValueType]
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    "The field’s name."
    name: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    uniqueValue: Boolean
    validateDomain: Boolean
    visibility: String
}

type Field_Entries implements FieldInterface {
    allowSelfRelations: String
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    displayType: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    entries(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    labelSource: String
    limit: Boolean
    limitAmount: Int
    limitOptions: String
    limitType: String
    localizeRelations: String
    "The field’s name."
    name: String
    orderBy: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    searchable: String
    selectionLabel: String
    showSiteMenu: String
    source: String
    sources: String
    targetSiteId: String
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    validateRelatedElements: String
    viewMode: String
    visibility: String
}

type Field_FileUpload implements FieldInterface {
    allowSelfRelations: String
    allowUploads: String
    allowedKinds: [String]
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultUploadLocationSource: String
    defaultUploadLocationSubpath: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    displayType: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    labelSource: String
    limit: Boolean
    limitAmount: Int
    limitFiles: String
    limitOptions: String
    limitType: String
    localizeRelations: String
    "The field’s name."
    name: String
    orderBy: String
    placeholder: String
    prePopulate: String
    previewMode: String
    "Whether the field is required."
    required: Boolean
    restrictFiles: String
    searchable: String
    selectionLabel: String
    showSiteMenu: String
    showUnpermittedFiles: String
    showUnpermittedVolumes: String
    singleUploadLocationSource: String
    singleUploadLocationSubpath: String
    sizeLimit: String
    sizeMinLimit: String
    source: String
    sources: String
    targetSiteId: String
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    uploadLocationSource: String
    uploadLocationSubpath: String
    useSingleFolder: String
    validateRelatedElements: String
    viewMode: String
    visibility: String
}

type Field_Group implements FieldInterface {
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    contentTable: String
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    "The field’s nested fields."
    fields: [FieldInterface]
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    "The field’s name."
    name: String
    "The field’s nested rows."
    nestedRows: [RowInterface]
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
}

type Field_Heading implements FieldInterface {
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    headingSize: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    "The field’s name."
    name: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
}

type Field_Hidden implements FieldInterface {
    columnType: String
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cookieName: String
    cssClasses: String
    defaultOption: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    "The field’s name."
    name: String
    placeholder: String
    prePopulate: String
    queryParameter: String
    "Whether the field is required."
    required: Boolean
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
}

type Field_Html implements FieldInterface {
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    htmlContent: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    "The field’s name."
    name: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
}

type Field_MissingField implements FieldInterface {
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    expectedType: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    "The field’s name."
    name: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    settings: String
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
}

type Field_MultiLineText implements FieldInterface {
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    "The field’s name."
    name: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    richTextButtons: String
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    useRichText: Boolean
    visibility: String
}

type Field_Name implements FieldInterface {
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    firstNameCollapsed: Boolean
    firstNameDefaultValue: String
    firstNameEnabled: Boolean
    firstNameErrorMessage: String
    firstNameLabel: String
    firstNamePlaceholder: String
    firstNamePrePopulate: String
    firstNameRequired: Boolean
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    lastNameCollapsed: Boolean
    lastNameDefaultValue: String
    lastNameEnabled: Boolean
    lastNameErrorMessage: String
    lastNameLabel: String
    lastNamePlaceholder: String
    lastNamePrePopulate: String
    lastNameRequired: Boolean
    limit: Boolean
    limitAmount: Int
    limitType: String
    middleNameCollapsed: Boolean
    middleNameDefaultValue: String
    middleNameEnabled: Boolean
    middleNameErrorMessage: String
    middleNameLabel: String
    middleNamePlaceholder: String
    middleNamePrePopulate: String
    middleNameRequired: Boolean
    "The field’s name."
    name: String
    placeholder: String
    prePopulate: String
    prefixCollapsed: Boolean
    prefixDefaultValue: String
    prefixEnabled: Boolean
    prefixErrorMessage: String
    prefixLabel: String
    prefixOptions: [FieldAttribute]
    prefixPlaceholder: String
    prefixPrePopulate: String
    prefixRequired: Boolean
    "Whether the field is required."
    required: Boolean
    subfieldLabelPosition: String
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    useMultipleFields: Boolean
    visibility: String
}

type Field_Number implements FieldInterface {
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    decimals: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    max: String
    min: String
    "The field’s name."
    name: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
}

type Field_Phone implements FieldInterface {
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    countryAllowed: String
    countryCollapsed: Boolean
    countryDefaultValue: String
    countryEnabled: Boolean
    countryOptions: [FieldAttribute]
    countryShowDialCode: Boolean
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    "The field’s name."
    name: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    subfieldLabelPosition: String
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
}

type Field_Radio implements FieldInterface {
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    layout: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    "The field’s name."
    name: String
    options: [KeyValueType]
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
}

type Field_Recipients implements FieldInterface {
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    displayType: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    multiple: Boolean
    "The field’s name."
    name: String
    options: [KeyValueType]
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
}

type Field_Repeater implements FieldInterface {
    addLabel: String
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    contentTable: String
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    "The field’s nested fields."
    fields: [FieldInterface]
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    maxRows: String
    minRows: String
    "The field’s name."
    name: String
    "The field’s nested rows."
    nestedRows: [RowInterface]
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
}

type Field_Section implements FieldInterface {
    borderColor: String
    borderStyle: String
    borderWidth: String
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    "The field’s name."
    name: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
}

type Field_SingleLineText implements FieldInterface {
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    "The field’s name."
    name: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
}

type Field_Table implements FieldInterface {
    addRowLabel: String
    columnType: String
    columnWidth: String
    columns: [KeyValueType]
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    defaults: [KeyValueType]
    "The field’s display name."
    displayName: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    limit: Boolean
    limitAmount: Int
    limitType: String
    maxRows: String
    minRows: String
    "The field’s name."
    name: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    searchable: String
    static: Boolean
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    visibility: String
}

type Field_Tags implements FieldInterface {
    allowLimit: String
    allowMultipleSources: String
    allowSelfRelations: String
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    displayType: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    labelSource: String
    limit: Boolean
    limitAmount: Int
    limitOptions: String
    limitType: String
    localizeRelations: String
    "The field’s name."
    name: String
    orderBy: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    searchable: String
    selectionLabel: String
    showSiteMenu: String
    source: String
    sources: String
    tags(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the tag groups the tags belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the tag groups the tags belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [TagInterface]
    targetSiteId: String
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    validateRelatedElements: String
    viewMode: String
    visibility: String
}

type Field_Users implements FieldInterface {
    allowSelfRelations: String
    columnWidth: String
    conditions: String
    containerAttributes: [FieldAttribute]
    cssClasses: String
    defaultValue: String
    "The field’s display name."
    displayName: String
    displayType: String
    enableConditions: Boolean
    enableContentEncryption: Boolean
    errorMessage: String
    formId: String
    "The field’s handle."
    handle: String
    "The id of the entity"
    id: ID
    includeInEmail: Boolean
    inputAttributes: [FieldAttribute]
    "The field’s GQL input name."
    inputTypeName: String
    "The field’s instructions."
    instructions: String
    instructionsPosition: String
    isNested: String
    labelPosition: String
    labelSource: String
    limit: Boolean
    limitAmount: Int
    limitOptions: String
    limitType: String
    localizeRelations: String
    "The field’s name."
    name: String
    orderBy: String
    placeholder: String
    prePopulate: String
    "Whether the field is required."
    required: Boolean
    searchable: String
    selectionLabel: String
    showSiteMenu: String
    source: String
    sources: String
    targetSiteId: String
    "The field’s type."
    type: String
    "The field’s GQL type."
    typeName: String
    "The uid of the entity"
    uid: String
    users(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String]
    ): [UserInterface]
    validateRelatedElements: String
    viewMode: String
    visibility: String
}

type Form implements ElementInterface & FormInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The form’s config as JSON."
    configJson: String
    "A CSRF token (name and value)"
    csrfToken: FormieCsrfTokenType
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    email: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The form’s fields."
    fields: [FieldInterface]
    "The form’s handle."
    handle: String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    message: String
    name1: String
    "The form’s pages."
    pages: [PageInterface]
    "The form’s rows."
    rows: [RowInterface]
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The form’s settings."
    settings: FormSettingsType
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The form’s rendered HTML."
    templateHtml(
        "The form template HTML will be rendered with these JSON serialized options."
        options: String,
        "The form field values will be populated with these JSON serialized options."
        populateFormValues: String
    ): String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type FormIntegrationsType {
    enabled: Boolean
    handle: String
    name: String
    settings: String
}

type FormSettingsType {
    "The form’s default instructions position for fields."
    defaultInstructionsPosition: String
    "The form’s default label position for fields."
    defaultLabelPosition: String
    "Whether to show the form’s current page title."
    displayCurrentPageTitle: Boolean
    "Whether to show the form’s title."
    displayFormTitle: Boolean
    "Whether to show the form’s page progress."
    displayPageProgress: Boolean
    "Whether to show the form’s page tabs."
    displayPageTabs: Boolean
    "The form’s submit error message."
    errorMessageHtml: String
    "The form’s integrations."
    integrations: [FormIntegrationsType]
    "Whether to show the form’s loading indicator."
    loadingIndicator: Boolean
    "The form’s loading indicator text."
    loadingIndicatorText: String
    "The form’s progress bar position."
    progressPosition: String
    "The form’s submit action entry (for redirection)."
    redirectEntry: EntryInterface
    "The form’s submit action redirect URL."
    redirectUrl: String
    "The form’s submit action."
    submitAction: String
    "Whether to hide the form’s success message."
    submitActionFormHide: Boolean
    "The form’s submit success message."
    submitActionMessageHtml: String
    "The form’s submit success message timeout."
    submitActionMessageTimeout: Int
    "The form’s submit redirect option (if in new tab or same tab)."
    submitActionTab: String
    "The form’s submit action URL."
    submitActionUrl: String
    "The form’s submit method."
    submitMethod: String
    "Whether to validate the form’s on focus."
    validationOnFocus: Boolean
    "Whether to validate the form’s on submit."
    validationOnSubmit: Boolean
}

type FormieCsrfTokenType {
    "The CSRF name."
    name: String
    "The CSRF token."
    value: String
}

type KeyValueType {
    default: Boolean
    handle: String
    heading: String
    isDefault: Boolean
    isOptgroup: Boolean
    label: String
    optgroup: Boolean
    type: String
    value: String
    width: String
}

type Mutation {
    "Delete a submission."
    deleteSubmission(id: Int!, siteId: Int!): Boolean
    ping: String
    "Save the “General” submission."
    save_general_Submission(
        email: String,
        "Whether the element should be enabled."
        enabled: Boolean,
        "Set the element’s ID."
        id: ID,
        message: String,
        name1: String,
        "The submission’s site ID."
        siteId: Int,
        "The submission’s status."
        status: String,
        "The submission’s status ID."
        statusId: Int,
        "The title of the element."
        title: String,
        "Set the element’s UID."
        uid: String
    ): general_Submission
    "Save the “Project Inquiry” submission."
    save_inquiry_Submission(
        email: String,
        "Whether the element should be enabled."
        enabled: Boolean,
        "Set the element’s ID."
        id: ID,
        message: String,
        name1: String,
        "The allowed values are [“Commerce solution”, “Custom plugin”, “Other”]"
        projectType: String,
        "The submission’s site ID."
        siteId: Int,
        "The submission’s status."
        status: String,
        "The submission’s status ID."
        statusId: Int,
        "The title of the element."
        title: String,
        "Set the element’s UID."
        uid: String
    ): inquiry_Submission
    "Save the “Support” submission."
    save_support_Submission(
        email: String,
        "Whether the element should be enabled."
        enabled: Boolean,
        "Set the element’s ID."
        id: ID,
        message: String,
        name1: String,
        "The submission’s site ID."
        siteId: Int,
        "The submission’s status."
        status: String,
        "The submission’s status ID."
        statusId: Int,
        "The title of the element."
        title: String,
        "Set the element’s UID."
        uid: String
    ): support_Submission
}

type NodeCollection {
    nodes: [VizyNodeInterface]
    rawNodes: ArrayType
    renderHtml: String
}

type NodeCustomAttribute {
    attribute: String
    value: String
}

type PageSettingsType implements PageSettingsInterface {
    "The page’s back button label."
    backButtonLabel: String
    "The page’s button positions."
    buttonsPosition: String
    "The id of the entity"
    id: ID
    "Whether to show the page’s back button."
    showBackButton: Boolean
    "The page’s submit button label."
    submitButtonLabel: String
    "The uid of the entity"
    uid: String
}

type PageType implements PageInterface {
    "The page’s fields."
    fields: [FieldInterface]
    "The id of the entity"
    id: ID
    "The page’s name."
    name: String
    "The page’s rows."
    rows: [RowInterface]
    "The page’s settings."
    settings: PageSettingsInterface
    "The uid of the entity"
    uid: String
}

type Query {
    "This query is used to query for a single asset."
    asset(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "This query is used to return the number of assets."
    assetCount(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): Int!
    "This query is used to query for assets."
    assets(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "This query is used to query for categories."
    categories(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface]
    "This query is used to query for a single category."
    category(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): CategoryInterface
    "This query is used to return the number of categories."
    categoryCount(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): Int!
    "This query is used to query for entries."
    entries(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "This query is used to query for a single entry."
    entry(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "This query is used to return the number of entries."
    entryCount(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): Int!
    "This query is used to query for a single form."
    form(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the form’s handle."
        handle: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): FormInterface
    "This query is used to query for a single form."
    formieForm(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the form’s handle."
        handle: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): FormInterface
    "This query is used to query for forms."
    formieForms(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the form’s handle."
        handle: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [FormInterface]
    "This query is used to query for a single submission."
    formieSubmission(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the submission’s form handle."
        form: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): SubmissionInterface
    "This query is used to query for submissions."
    formieSubmissions(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the submission’s form handle."
        form: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [SubmissionInterface]
    "This query is used to query for forms."
    forms(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the form’s handle."
        handle: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [FormInterface]
    "This query is used to query for Imager X transforms."
    imagerTransform(
        "The asset id to transform."
        id: Int,
        "The handle of the named transform you want to generate."
        transform: String,
        "The asset url to transform."
        url: String
    ): [ImagerTransformedImageInterface]
    "This query is used to query for a single node."
    node(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        highlight: Boolean,
        icon: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results based on the navigation the node belongs to."
        nav: [String],
        "Narrows the query results based on the provided navigation handle."
        navHandle: String,
        "Narrows the query results based on the provided navigation ID."
        navId: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the node’s type."
        type: [String],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): NodeInterface
    "This query is used to query for nodes."
    nodes(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        highlight: Boolean,
        icon: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results based on the navigation the node belongs to."
        nav: [String],
        "Narrows the query results based on the provided navigation handle."
        navHandle: String,
        "Narrows the query results based on the provided navigation ID."
        navId: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the node’s type."
        type: [String],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [NodeInterface]
    ping: String
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "This query is used to query for a single submission."
    submission(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the submission’s form handle."
        form: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): SubmissionInterface
    "This query is used to query for submissions."
    submissions(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the submission’s form handle."
        form: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [SubmissionInterface]
    "This query is used to query for a single user."
    user(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String]
    ): UserInterface
    "This query is used to return the number of users."
    userCount(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String]
    ): Int!
    "This query is used to query for users."
    users(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String]
    ): [UserInterface]
}

type RowType implements RowInterface {
    "The row’s fields."
    fields: [FieldInterface]
    "The id of the entity"
    id: ID
    "The uid of the entity"
    uid: String
}

"This entity has all the SEOmatic fields"
type SeomaticType implements SeomaticInterface {
    "The FrontendTemplateContainer SEOmatic container."
    frontendTemplateContainer: String
    "The MetaJsonLdContainer SEOmatic container."
    metaJsonLdContainer: String
    "The MetaLinkContainer SEOmatic container."
    metaLinkContainer: String
    "The MetaScriptContainer SEOmatic container."
    metaScriptContainer: String
    "The MetaSiteVarsContainer SEOmatic container."
    metaSiteVarsContainer: String
    "The MetaTagContainer SEOmatic container."
    metaTagContainer: String
    "The MetaTitleContainer SEOmatic container."
    metaTitleContainer: String
}

type User implements ElementInterface & UserInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The user's email."
    email: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The user's first name."
    firstName: String
    "The user's first name or username."
    friendlyName: String
    "The user's full name."
    fullName: String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The user's last name."
    lastName: String
    "The user's full name or username."
    name: String
    "The user’s preferences."
    preferences: String
    "The user’s preferred language."
    preferredLanguage: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The username."
    username: String
}

type VizyNode_Blockquote implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type VizyNode_BulletList implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type VizyNode_CodeBlock implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type VizyNode_HardBreak implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type VizyNode_Heading implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type VizyNode_HorizontalRule implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type VizyNode_Iframe implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type VizyNode_Image implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type VizyNode_ListItem implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type VizyNode_OrderedList implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type VizyNode_Paragraph implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type VizyNode_Table implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type VizyNode_TableCell implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type VizyNode_TableHeader implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type VizyNode_TableRow implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type VizyNode_Text implements VizyNodeInterface {
    attrs: ArrayType
    content: ArrayType
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type blog_Category implements CategoryInterface & ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The category’s children."
    children(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The handle of the group that contains the category."
    groupHandle: String
    "The ID of the group that contains the category."
    groupId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface]
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): CategoryInterface
    "The category’s parent."
    parent(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): CategoryInterface
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): CategoryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type blog_article_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    blogCategories(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface]
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    contentBlocks: NodeCollection
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The creator of a given draft."
    draftCreator: UserInterface
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    "Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead."
    isUnsavedDraft: Boolean
    keywords: String
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    previewImage(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    previewSummary: String
    resources(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [resources_MatrixField]
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    seoRobotsOverride: String
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    subheading: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type blog_podcast_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    blogCategories(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface]
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    contentBlocks: NodeCollection
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The creator of a given draft."
    draftCreator: UserInterface
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    episodeNumber: Number
    "The expiry date of the entry."
    expiryDate: DateTime
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    "Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead."
    isUnsavedDraft: Boolean
    keywords: String
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    mediaUrl: String
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    previewImage(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    previewSummary: String
    resources(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [resources_MatrixField]
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    seoRobotsOverride: String
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    subheading: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type cards_card_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    cardCaption: String
    cardImage(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    cardLink: linkField_Link
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type contentBlocks_blogGallery_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    blogTypes(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    gridType(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    html: String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type contentBlocks_button_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    button: linkField_Link
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    html: String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    theme(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    type: String
}

type contentBlocks_callout_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    branded: Boolean
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    html: String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    rawNode: ArrayType
    richText: NodeCollection
    tagName: String
    text: String
    theme(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    type: String
}

type contentBlocks_cardGallery_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    cards(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [cards_MatrixField]
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    gridType(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    html: String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type contentBlocks_code_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    caption: String
    codeBlock: String
    codeLanguage(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    html: String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type contentBlocks_heading_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    heading: String
    headingTag(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    headingTheme(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    html: String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type contentBlocks_imageAndText_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    html: String
    image(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    imageShape(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    mediaAlignment(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    rawNode: ArrayType
    richText: NodeCollection
    tagName: String
    text: String
    type: String
}

type contentBlocks_image_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    caption: String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    html: String
    image(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    imageShape(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type contentBlocks_podcast_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    html: String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    mediaUrl: String
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type contentBlocks_quote_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    citation: String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    html: String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    quote: NodeCollection
    rawNode: ArrayType
    tagName: String
    text: String
    textAlignment(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    type: String
}

type contentBlocks_socialLinks_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    html: String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    rawNode: ArrayType
    socialMediaLinks(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Super Table blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        " Narrows the query results based on the owner element of the Super Table blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [socialMediaLinks_SuperTableField]
    tagName: String
    text: String
    type: String
}

type contentBlocks_softwareGallery_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    gridType(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    html: String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    rawNode: ArrayType
    softwareEntries(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    tagName: String
    text: String
    type: String
}

type contentBlocks_spacer_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    height(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type contentBlocks_subscribe_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    html: String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    rawNode: ArrayType
    subscribeEntry(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    tagName: String
    text: String
    type: String
}

type contentRows_rowContent_BlockType implements ElementInterface & NeoBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    contentBlocks: NodeCollection
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    elementType(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the neo block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The Neo block's level."
    level: Int
    "The ID of the element that owns the neo block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the neo block's type."
    typeHandle: String
    "The ID of the neo block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    width(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
}

type contentRows_rowSpacer_BlockType implements ElementInterface & NeoBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the neo block."
    fieldId: Int
    height(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The Neo block's level."
    level: Int
    "The ID of the element that owns the neo block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the neo block's type."
    typeHandle: String
    "The ID of the neo block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type footerNavigation_Node implements ElementInterface & NodeInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The node’s children. Accepts the same arguments as the `nodes` query."
    children(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        highlight: Boolean,
        icon: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results based on the navigation the node belongs to."
        nav: [String],
        "Narrows the query results based on the provided navigation handle."
        navHandle: String,
        "Narrows the query results based on the provided navigation ID."
        navId: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the node’s type."
        type: [String],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [NodeInterface]
    "Any additional classes for the node."
    classes: String
    "Any additional custom attributes for the node."
    customAttributes: [NodeCustomAttribute]
    "Any additional data for the node."
    data: String
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The element the node links to."
    element: ElementInterface
    "The ID of the element this node is linked to."
    elementId: Int
    "Whether the element is enabled or not."
    enabled: Boolean
    icon(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The handle of the navigation this node belongs to."
    navHandle: String
    "The ID of the navigation this node belongs to."
    navId: Int
    "The name of the navigation this node belongs to."
    navName: String
    "Whether this node should open in a new window."
    newWindow: String
    "The node’s URI"
    nodeUri: String
    "The node’s parent."
    parent: NodeInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The type of node this is."
    type: String
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The node’s full URL"
    url: String
    "The URL for this navigation item."
    urlSuffix: String
}

type general_Submission implements ElementInterface & SubmissionInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    email: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    message: String
    name1: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The submission’s status."
    status: String
    "The submission’s status ID."
    statusId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type home_home_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    button: linkField_Link
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    contentRows(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the neo blocks belong to, per the fields’ IDs."
        fieldId: [Int],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "The block’s level within its field"
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        " Narrows the query results based on the owner element of the neo blocks, per the owners’ IDs."
        ownerId: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the neo blocks’ block type handles."
        type: [String],
        typeId: [Int],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [contentRows_NeoField]
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The creator of a given draft."
    draftCreator: UserInterface
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    heading: String
    heroDesign(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    "Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead."
    isUnsavedDraft: Boolean
    keywords: String
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    previewImage(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    previewSummary: String
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    seoRobotsOverride: String
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    subheading: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

"This entity has all the Imager X transform image interface fields."
type imagerx implements ImagerTransformedImageInterface {
    "Extension of transformed image."
    extension: String
    "Filename of transformed image."
    filename: String
    "Height of transformed image."
    height: Int
    "The id of the entity"
    id: ID
    "Size of transformed image."
    isNew: Boolean
    "Mime type of transformed image."
    mimeType: String
    "Path to transformed image."
    path: String
    "Size of transformed image."
    size: Int
    "The uid of the entity"
    uid: String
    "URL for transformed image."
    url: String
    "Width of transformed image."
    width: Int
}

type images_Asset implements AssetInterface & ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    altText: String
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the asset file was last modified."
    dateModified: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The file extension for the asset file."
    extension: String
    "The filename of the asset file."
    filename: String
    "The focal point represented as an array with `x` and `y` keys, or null if it's not an image."
    focalPoint: [Float]
    "The ID of the folder that the asset belongs to."
    folderId: Int
    "Whether a user-defined focal point is set on the asset."
    hasFocalPoint: Boolean
    "The height in pixels or null if it's not an image."
    height(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
    "The id of the entity"
    id: ID
    "Returns a list of images produced from the named Imager X transform."
    imagerTransform(
        "The handle of the named transform you want to generate."
        transform: String
    ): [ImagerTransformedImageInterface]
    "An `<img>` tag based on this asset."
    img: String
    "The file kind."
    kind: String
    "The language of the site element is associated with."
    language: String
    "The file’s MIME type, if it can be determined."
    mimeType: String
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The asset's path in the volume."
    path: String
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The file size in bytes."
    size: String
    "The element’s slug."
    slug: String
    "Returns a `srcset` attribute value based on the given widths or x-descriptors."
    srcset(
        "A list of size descriptors. If you pass x-descriptors, it will be assumed that the image’s current width is the indented 1x width."
        sizes: [String!]!
    ): String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The user who first added this asset (if known)."
    uploader(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String]
    ): UserInterface
    "The ID of the user who first added this asset (if known)."
    uploaderId: Int
    "The element’s URI."
    uri: String
    "The full URL of the asset. This field accepts the same fields as the `transform` directive."
    url(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): String
    "The ID of the volume that the asset belongs to."
    volumeId: Int
    "The width in pixels or null if it's not an image."
    width(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
}

type inquiry_Submission implements ElementInterface & SubmissionInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    email: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    message: String
    name1: String
    projectType(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The submission’s status."
    status: String
    "The submission’s status ID."
    statusId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

"This is the interface implemented by all links."
type linkField_Link {
    ariaLabel: String
    customText: String
    element: ElementInterface
    target: String
    text: String
    title: String
    type: String
    url: String
}

type pages_blog_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    blogCategories(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "Whether to only return categories that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the category groups the categories belong to per the group’s handles."
        group: [String],
        "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [CategoryInterface]
    blogTypes(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The creator of a given draft."
    draftCreator: UserInterface
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    heading: String
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    "Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead."
    isUnsavedDraft: Boolean
    keywords: String
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    previewImage(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    previewSummary: String
    resultsPerPage: Number
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    seoRobotsOverride: String
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    subheading: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type pages_contact_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    contentRows(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the neo blocks belong to, per the fields’ IDs."
        fieldId: [Int],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "The block’s level within its field"
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        " Narrows the query results based on the owner element of the neo blocks, per the owners’ IDs."
        ownerId: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the neo blocks’ block type handles."
        type: [String],
        typeId: [Int],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [contentRows_NeoField]
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The creator of a given draft."
    draftCreator: UserInterface
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    forms(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the form’s handle."
        handle: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [FormInterface]
    heading: String
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    "Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead."
    isUnsavedDraft: Boolean
    keywords: String
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    previewImage(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    previewSummary: String
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    seoRobotsOverride: String
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    subheading: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type pages_general_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    button: linkField_Link
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    contentRows(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the neo blocks belong to, per the fields’ IDs."
        fieldId: [Int],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "The block’s level within its field"
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        " Narrows the query results based on the owner element of the neo blocks, per the owners’ IDs."
        ownerId: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the neo blocks’ block type handles."
        type: [String],
        typeId: [Int],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [contentRows_NeoField]
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The creator of a given draft."
    draftCreator: UserInterface
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    heading: String
    heroDesign(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    "Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead."
    isUnsavedDraft: Boolean
    keywords: String
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    previewImage(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    previewSummary: String
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    seoRobotsOverride: String
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    subheading: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type primaryNavigation_Node implements ElementInterface & NodeInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The node’s children. Accepts the same arguments as the `nodes` query."
    children(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        highlight: Boolean,
        icon: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results based on the navigation the node belongs to."
        nav: [String],
        "Narrows the query results based on the provided navigation handle."
        navHandle: String,
        "Narrows the query results based on the provided navigation ID."
        navId: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the node’s type."
        type: [String],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [NodeInterface]
    "Any additional classes for the node."
    classes: String
    "Any additional custom attributes for the node."
    customAttributes: [NodeCustomAttribute]
    "Any additional data for the node."
    data: String
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The element the node links to."
    element: ElementInterface
    "The ID of the element this node is linked to."
    elementId: Int
    "Whether the element is enabled or not."
    enabled: Boolean
    highlight: Boolean
    icon(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The handle of the navigation this node belongs to."
    navHandle: String
    "The ID of the navigation this node belongs to."
    navId: Int
    "The name of the navigation this node belongs to."
    navName: String
    "Whether this node should open in a new window."
    newWindow: String
    "The node’s URI"
    nodeUri: String
    "The node’s parent."
    parent: NodeInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The type of node this is."
    type: String
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The node’s full URL"
    url: String
    "The URL for this navigation item."
    urlSuffix: String
}

type resources_resource_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    resourcelink: linkField_Link
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type reusable_newsletterSignup_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The creator of a given draft."
    draftCreator: UserInterface
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    "Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type reusable_softwareListWithHeading_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The creator of a given draft."
    draftCreator: UserInterface
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    "Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type reusable_subscribe_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    confirmation: String
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The creator of a given draft."
    draftCreator: UserInterface
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    heading: String
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    "Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    summary: NodeCollection
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type richText_button_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    button: linkField_Link
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    html: String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    theme(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    type: String
}

type richText_heading_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    heading: String
    headingTag(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    headingTheme(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    html: String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type richText_quote_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    citation: String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    html: String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    quote: NodeCollection
    rawNode: ArrayType
    tagName: String
    text: String
    textAlignment(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    type: String
}

type richText_socialLinks_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    blockWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    html: String
    margin(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    marks: ArrayType
    rawNode: ArrayType
    socialMediaLinks(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Super Table blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        " Narrows the query results based on the owner element of the Super Table blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [socialMediaLinks_SuperTableField]
    tagName: String
    text: String
    type: String
}

type richText_spacer_BlockType implements VizyBlockInterface & VizyNodeInterface {
    attrs: ArrayType
    blockTypeHandle: String
    blockTypeId: String
    collapsed: Boolean
    content: ArrayType
    enabled: Boolean
    height(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    html: String
    marks: ArrayType
    rawNode: ArrayType
    tagName: String
    text: String
    type: String
}

type socialMediaLinks_BlockType implements ElementInterface & SuperTableBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    accountLink: String
    accountType(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the Super Table block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the Super Table block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The sort order of the Super Table block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The ID of the Super Table block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type socialNavigation_Node implements ElementInterface & NodeInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The node’s children. Accepts the same arguments as the `nodes` query."
    children(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        highlight: Boolean,
        icon: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results based on the navigation the node belongs to."
        nav: [String],
        "Narrows the query results based on the provided navigation handle."
        navHandle: String,
        "Narrows the query results based on the provided navigation ID."
        navId: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the node’s type."
        type: [String],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [NodeInterface]
    "Any additional classes for the node."
    classes: String
    "Any additional custom attributes for the node."
    customAttributes: [NodeCustomAttribute]
    "Any additional data for the node."
    data: String
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The element the node links to."
    element: ElementInterface
    "The ID of the element this node is linked to."
    elementId: Int
    "Whether the element is enabled or not."
    enabled: Boolean
    icon(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The handle of the navigation this node belongs to."
    navHandle: String
    "The ID of the navigation this node belongs to."
    navId: Int
    "The name of the navigation this node belongs to."
    navName: String
    "Whether this node should open in a new window."
    newWindow: String
    "The node’s URI"
    nodeUri: String
    "The node’s parent."
    parent: NodeInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The type of node this is."
    type: String
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The node’s full URL"
    url: String
    "The URL for this navigation item."
    urlSuffix: String
}

type softwareNavigation_Node implements ElementInterface & NodeInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The node’s children. Accepts the same arguments as the `nodes` query."
    children(
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        highlight: Boolean,
        icon: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results based on the navigation the node belongs to."
        nav: [String],
        "Narrows the query results based on the provided navigation handle."
        navHandle: String,
        "Narrows the query results based on the provided navigation ID."
        navId: Int,
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the node’s type."
        type: [String],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [NodeInterface]
    "Any additional classes for the node."
    classes: String
    "Any additional custom attributes for the node."
    customAttributes: [NodeCustomAttribute]
    "Any additional data for the node."
    data: String
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The element the node links to."
    element: ElementInterface
    "The ID of the element this node is linked to."
    elementId: Int
    "Whether the element is enabled or not."
    enabled: Boolean
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The handle of the navigation this node belongs to."
    navHandle: String
    "The ID of the navigation this node belongs to."
    navId: Int
    "The name of the navigation this node belongs to."
    navName: String
    "Whether this node should open in a new window."
    newWindow: String
    "The node’s URI"
    nodeUri: String
    "The node’s parent."
    parent: NodeInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The type of node this is."
    type: String
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The node’s full URL"
    url: String
    "The URL for this navigation item."
    urlSuffix: String
}

type software_plugin_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query."
    ancestors(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "Returns the entry’s canonical ID."
    canonicalId: Int
    "Returns the entry’s canonical UUID."
    canonicalUid: String
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The current revision for the entry."
    currentRevision: EntryInterface
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query."
    descendants(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The creator of a given draft."
    draftCreator: UserInterface
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "The drafts for the entry."
    drafts(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    externalUrl: String
    "The id of the entity"
    id: ID
    image(
        altText: [QueryArgument],
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is an unpublished draft."
    isUnpublishedDraft: Boolean
    "Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria."
    next(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria."
    prev(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The creator of a given revision."
    revisionCreator: UserInterface
    "The revisions for the entry."
    revisions(
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        blogCategories: [QueryArgument],
        blogTypes: [QueryArgument],
        button: [QueryArgument],
        confirmation: [QueryArgument],
        contentBlocks: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element, provided by its ID."
        descendantOf: Int,
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        episodeNumber: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalUrl: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        forms: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        heading: [QueryArgument],
        heroDesign: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        image: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        keywords: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        mediaUrl: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by."
        orderBy: String,
        "Narrows the query results to only entries that are positioned after another element, provided by its ID."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element, provided by its ID."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Determines which site should be selected when querying multi-site elements."
        preferSites: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
        prevSiblingOf: Int,
        previewImage: [QueryArgument],
        previewSummary: [QueryArgument],
        "Whether provisional drafts should be returned."
        provisionalDrafts: Boolean,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [QueryArgument],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
        relatedToAll: [QueryArgument],
        "Narrows the query results to elements that relate to an asset list defined with this argument."
        relatedToAssets: [AssetCriteriaInput],
        "Narrows the query results to elements that relate to a category list defined with this argument."
        relatedToCategories: [CategoryCriteriaInput],
        "Narrows the query results to elements that relate to an entry list defined with this argument."
        relatedToEntries: [EntryCriteriaInput],
        "Narrows the query results to elements that relate to a tag list defined with this argument."
        relatedToTags: [TagCriteriaInput],
        "Narrows the query results to elements that relate to a use list defined with this argument."
        relatedToUsers: [UserCriteriaInput],
        resultsPerPage: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        seoRobotsOverride: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: [QueryArgument],
        "Narrows the query results based on the unique identifier for an element-site relation."
        siteSettingsId: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subheading: [QueryArgument],
        summary: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    "This query is used to query for SEOmatic meta data."
    seomatic(
        "Whether the meta items should be returned as an array or as pre-rendered tag text."
        asArray: Boolean,
        "Optional - The site handle to resolve the SEOmatic metdata for."
        site: String,
        "Optional - The site ID to resolve the SEOmatic metdata for."
        siteId: Int,
        "The URI to resolve the SEOmatic metdata for."
        uri: String
    ): SeomaticInterface
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "Returns the entry’s canonical ID."
    sourceId: Int @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.")
    "Returns the entry’s canonical UUID."
    sourceUid: String @deprecated(reason : "this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.")
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    summary: NodeCollection
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type support_Submission implements ElementInterface & SubmissionInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    email: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    message: String
    name1: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The unique identifier for an element-site relation."
    siteSettingsId: ID
    "The element’s slug."
    slug: String
    "The submission’s status."
    status: String
    "The submission’s status ID."
    statusId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

input AssetCriteriaInput {
    altText: [QueryArgument]
    "Narrows the query results to only elements that have been archived."
    archived: Boolean
    "Narrows the query results based on the elements’ creation dates."
    dateCreated: [String]
    "Narrows the query results based on the assets’ files’ last-modified dates."
    dateModified: String
    "Narrows the query results based on the elements’ last-updated dates."
    dateUpdated: [String]
    "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
    enabledForSite: Boolean
    "Narrows the query results based on the assets’ filenames."
    filename: [String]
    "Causes the query results to be returned in the order specified by the `id` argument."
    fixedOrder: Boolean
    "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
    folderId: [QueryArgument]
    "Narrows the query results based on the assets’ image heights."
    height: [String]
    "Narrows the query results based on the elements’ IDs."
    id: [QueryArgument]
    "Causes the query results to be returned in reverse order."
    inReverse: Boolean
    "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
    includeSubfolders: Boolean
    "Narrows the query results based on the assets’ file kinds."
    kind: [String]
    "Sets the limit for paginated results."
    limit: Int
    "Sets the offset for paginated results."
    offset: Int
    "Sets the field the returned elements should be ordered by."
    orderBy: String
    "Determines which site should be selected when querying multi-site elements."
    preferSites: [QueryArgument]
    "Narrows the query results based on a reference string."
    ref: [String]
    "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
    relatedTo: [QueryArgument]
    "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
    relatedToAll: [QueryArgument]
    "Narrows the query results to elements that relate to an asset list defined with this argument."
    relatedToAssets: [AssetCriteriaInput]
    "Narrows the query results to elements that relate to a category list defined with this argument."
    relatedToCategories: [CategoryCriteriaInput]
    "Narrows the query results to elements that relate to an entry list defined with this argument."
    relatedToEntries: [EntryCriteriaInput]
    "Narrows the query results to elements that relate to a tag list defined with this argument."
    relatedToTags: [TagCriteriaInput]
    "Narrows the query results to elements that relate to a use list defined with this argument."
    relatedToUsers: [UserCriteriaInput]
    "Narrows the query results to only elements that match a search query."
    search: String
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    site: [String]
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    siteId: [QueryArgument]
    "Narrows the query results based on the unique identifier for an element-site relation."
    siteSettingsId: [QueryArgument]
    "Narrows the query results based on the assets’ file sizes (in bytes)."
    size: [String]
    "Narrows the query results based on the elements’ slugs."
    slug: [String]
    "Narrows the query results based on the elements’ statuses."
    status: [String]
    "Narrows the query results based on the elements’ titles."
    title: [String]
    "Narrows the query results to only elements that have been soft-deleted."
    trashed: Boolean
    "Narrows the query results based on the elements’ UIDs."
    uid: [String]
    "Determines whether only elements with unique IDs should be returned by the query."
    unique: Boolean
    "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
    uploader: QueryArgument
    "Narrows the query results based on the elements’ URIs."
    uri: [String]
    "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
    volume: [String]
    "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
    volumeId: [QueryArgument]
    "Narrows the query results based on the assets’ image widths."
    width: [String]
    "A list of transform handles to preload."
    withTransforms: [String]
}

input CategoryCriteriaInput {
    "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
    ancestorDist: Int
    "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
    ancestorOf: Int
    "Narrows the query results to only elements that have been archived."
    archived: Boolean
    "Narrows the query results based on the elements’ creation dates."
    dateCreated: [String]
    "Narrows the query results based on the elements’ last-updated dates."
    dateUpdated: [String]
    "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
    descendantDist: Int
    "Narrows the query results to only elements that are descendants of another element, provided by its ID."
    descendantOf: Int
    "Whether to only return categories that the user has permission to edit."
    editable: Boolean
    "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
    enabledForSite: Boolean
    "Causes the query results to be returned in the order specified by the `id` argument."
    fixedOrder: Boolean
    "Narrows the query results based on the category groups the categories belong to per the group’s handles."
    group: [String]
    "Narrows the query results based on the category groups the categories belong to, per the groups’ IDs."
    groupId: [QueryArgument]
    "Narrows the query results based on whether the elements have any descendants."
    hasDescendants: Boolean
    "Narrows the query results based on the elements’ IDs."
    id: [QueryArgument]
    "Causes the query results to be returned in reverse order."
    inReverse: Boolean
    "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
    leaves: Boolean
    "Narrows the query results based on the elements’ level within the structure."
    level: Int
    "Sets the limit for paginated results."
    limit: Int
    "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
    nextSiblingOf: Int
    "Sets the offset for paginated results."
    offset: Int
    "Sets the field the returned elements should be ordered by."
    orderBy: String
    "Narrows the query results to only entries that are positioned after another element, provided by its ID."
    positionedAfter: Int
    "Narrows the query results to only entries that are positioned before another element, provided by its ID."
    positionedBefore: Int
    "Determines which site should be selected when querying multi-site elements."
    preferSites: [QueryArgument]
    "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
    prevSiblingOf: Int
    "Narrows the query results based on a reference string."
    ref: [String]
    "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
    relatedTo: [QueryArgument]
    "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
    relatedToAll: [QueryArgument]
    "Narrows the query results to elements that relate to an asset list defined with this argument."
    relatedToAssets: [AssetCriteriaInput]
    "Narrows the query results to elements that relate to a category list defined with this argument."
    relatedToCategories: [CategoryCriteriaInput]
    "Narrows the query results to elements that relate to an entry list defined with this argument."
    relatedToEntries: [EntryCriteriaInput]
    "Narrows the query results to elements that relate to a tag list defined with this argument."
    relatedToTags: [TagCriteriaInput]
    "Narrows the query results to elements that relate to a use list defined with this argument."
    relatedToUsers: [UserCriteriaInput]
    "Narrows the query results to only elements that match a search query."
    search: String
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    site: [String]
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    siteId: [QueryArgument]
    "Narrows the query results based on the unique identifier for an element-site relation."
    siteSettingsId: [QueryArgument]
    "Narrows the query results based on the elements’ slugs."
    slug: [String]
    "Narrows the query results based on the elements’ statuses."
    status: [String]
    "Determines which structure data should be joined into the query."
    structureId: Int
    "Narrows the query results based on the elements’ titles."
    title: [String]
    "Narrows the query results to only elements that have been soft-deleted."
    trashed: Boolean
    "Narrows the query results based on the elements’ UIDs."
    uid: [String]
    "Determines whether only elements with unique IDs should be returned by the query."
    unique: Boolean
    "Narrows the query results based on the elements’ URIs."
    uri: [String]
    "Explicitly determines whether the query should join in the structure data."
    withStructure: Boolean
}

input EntryCriteriaInput {
    "Narrows the query results to only entries that were posted on or after a certain date."
    after: String
    "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
    ancestorDist: Int
    "Narrows the query results to only elements that are ancestors of another element, provided by its ID."
    ancestorOf: Int
    "Narrows the query results to only elements that have been archived."
    archived: Boolean
    "Narrows the query results based on the user group the entries’ authors belong to."
    authorGroup: [String]
    "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
    authorGroupId: [QueryArgument]
    "Narrows the query results based on the entries’ authors."
    authorId: [QueryArgument]
    "Narrows the query results to only entries that were posted before a certain date."
    before: String
    blogCategories: [QueryArgument]
    blogTypes: [QueryArgument]
    button: [QueryArgument]
    confirmation: [QueryArgument]
    contentBlocks: [QueryArgument]
    "Narrows the query results based on the elements’ creation dates."
    dateCreated: [String]
    "Narrows the query results based on the elements’ last-updated dates."
    dateUpdated: [String]
    "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
    descendantDist: Int
    "Narrows the query results to only elements that are descendants of another element, provided by its ID."
    descendantOf: Int
    "The drafts’ creator ID"
    draftCreator: Int
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts."
    draftOf: QueryArgument
    "Whether draft elements should be returned."
    drafts: Boolean
    "Whether to only return entries that the user has permission to edit."
    editable: Boolean
    "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
    enabledForSite: Boolean
    episodeNumber: [QueryArgument]
    "Narrows the query results based on the entries’ expiry dates."
    expiryDate: [String]
    externalUrl: [QueryArgument]
    "Causes the query results to be returned in the order specified by the `id` argument."
    fixedOrder: Boolean
    forms: [QueryArgument]
    "Narrows the query results based on whether the elements have any descendants."
    hasDescendants: Boolean
    heading: [QueryArgument]
    heroDesign: [QueryArgument]
    "Narrows the query results based on the elements’ IDs."
    id: [QueryArgument]
    image: [QueryArgument]
    "Causes the query results to be returned in reverse order."
    inReverse: Boolean
    keywords: [QueryArgument]
    "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
    leaves: Boolean
    "Narrows the query results based on the elements’ level within the structure."
    level: Int
    "Sets the limit for paginated results."
    limit: Int
    mediaUrl: [QueryArgument]
    "Narrows the query results to only the entry that comes immediately after another element, provided by its ID."
    nextSiblingOf: Int
    "Sets the offset for paginated results."
    offset: Int
    "Sets the field the returned elements should be ordered by."
    orderBy: String
    "Narrows the query results to only entries that are positioned after another element, provided by its ID."
    positionedAfter: Int
    "Narrows the query results to only entries that are positioned before another element, provided by its ID."
    positionedBefore: Int
    "Narrows the query results based on the entries’ post dates."
    postDate: [String]
    "Determines which site should be selected when querying multi-site elements."
    preferSites: [QueryArgument]
    "Narrows the query results to only the entry that comes immediately before another element, provided by its ID."
    prevSiblingOf: Int
    previewImage: [QueryArgument]
    previewSummary: [QueryArgument]
    "Whether provisional drafts should be returned."
    provisionalDrafts: Boolean
    "Narrows the query results based on a reference string."
    ref: [String]
    "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
    relatedTo: [QueryArgument]
    "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
    relatedToAll: [QueryArgument]
    "Narrows the query results to elements that relate to an asset list defined with this argument."
    relatedToAssets: [AssetCriteriaInput]
    "Narrows the query results to elements that relate to a category list defined with this argument."
    relatedToCategories: [CategoryCriteriaInput]
    "Narrows the query results to elements that relate to an entry list defined with this argument."
    relatedToEntries: [EntryCriteriaInput]
    "Narrows the query results to elements that relate to a tag list defined with this argument."
    relatedToTags: [TagCriteriaInput]
    "Narrows the query results to elements that relate to a use list defined with this argument."
    relatedToUsers: [UserCriteriaInput]
    resultsPerPage: [QueryArgument]
    "The revisions’ creator ID"
    revisionCreator: Int
    "The ID of the revision to return (from the `revisions` table)"
    revisionId: Int
    "The source element ID that revisions should be returned for"
    revisionOf: QueryArgument
    "Whether revision elements should be returned."
    revisions: Boolean
    "Narrows the query results to only elements that match a search query."
    search: String
    "Narrows the query results based on the section handles the entries belong to."
    section: [String]
    "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
    sectionId: [QueryArgument]
    seoRobotsOverride: [QueryArgument]
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    site: [String]
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    siteId: [QueryArgument]
    "Narrows the query results based on the unique identifier for an element-site relation."
    siteSettingsId: [QueryArgument]
    "Narrows the query results based on the elements’ slugs."
    slug: [String]
    "Narrows the query results based on the elements’ statuses."
    status: [String]
    "Determines which structure data should be joined into the query."
    structureId: Int
    subheading: [QueryArgument]
    summary: [QueryArgument]
    "Narrows the query results based on the elements’ titles."
    title: [String]
    "Narrows the query results to only elements that have been soft-deleted."
    trashed: Boolean
    "Narrows the query results based on the entries’ entry type handles."
    type: [String]
    "Narrows the query results based on the entries’ entry types, per the types’ IDs."
    typeId: [QueryArgument]
    "Narrows the query results based on the elements’ UIDs."
    uid: [String]
    "Determines whether only elements with unique IDs should be returned by the query."
    unique: Boolean
    "Narrows the query results based on the elements’ URIs."
    uri: [String]
    "Explicitly determines whether the query should join in the structure data."
    withStructure: Boolean
}

input TagCriteriaInput {
    "Narrows the query results to only elements that have been archived."
    archived: Boolean
    "Narrows the query results based on the elements’ creation dates."
    dateCreated: [String]
    "Narrows the query results based on the elements’ last-updated dates."
    dateUpdated: [String]
    "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
    enabledForSite: Boolean
    "Causes the query results to be returned in the order specified by the `id` argument."
    fixedOrder: Boolean
    "Narrows the query results based on the tag groups the tags belong to per the group’s handles."
    group: [String]
    "Narrows the query results based on the tag groups the tags belong to, per the groups’ IDs."
    groupId: [QueryArgument]
    "Narrows the query results based on the elements’ IDs."
    id: [QueryArgument]
    "Causes the query results to be returned in reverse order."
    inReverse: Boolean
    "Sets the limit for paginated results."
    limit: Int
    "Sets the offset for paginated results."
    offset: Int
    "Sets the field the returned elements should be ordered by."
    orderBy: String
    "Determines which site should be selected when querying multi-site elements."
    preferSites: [QueryArgument]
    "Narrows the query results based on a reference string."
    ref: [String]
    "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
    relatedTo: [QueryArgument]
    "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
    relatedToAll: [QueryArgument]
    "Narrows the query results to elements that relate to an asset list defined with this argument."
    relatedToAssets: [AssetCriteriaInput]
    "Narrows the query results to elements that relate to a category list defined with this argument."
    relatedToCategories: [CategoryCriteriaInput]
    "Narrows the query results to elements that relate to an entry list defined with this argument."
    relatedToEntries: [EntryCriteriaInput]
    "Narrows the query results to elements that relate to a tag list defined with this argument."
    relatedToTags: [TagCriteriaInput]
    "Narrows the query results to elements that relate to a use list defined with this argument."
    relatedToUsers: [UserCriteriaInput]
    "Narrows the query results to only elements that match a search query."
    search: String
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    site: [String]
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    siteId: [QueryArgument]
    "Narrows the query results based on the unique identifier for an element-site relation."
    siteSettingsId: [QueryArgument]
    "Narrows the query results based on the elements’ slugs."
    slug: [String]
    "Narrows the query results based on the elements’ statuses."
    status: [String]
    "Narrows the query results based on the elements’ titles."
    title: [String]
    "Narrows the query results to only elements that have been soft-deleted."
    trashed: Boolean
    "Narrows the query results based on the elements’ UIDs."
    uid: [String]
    "Determines whether only elements with unique IDs should be returned by the query."
    unique: Boolean
    "Narrows the query results based on the elements’ URIs."
    uri: [String]
}

input UserCriteriaInput {
    "Narrows the query results to only elements that have been archived."
    archived: Boolean
    "Narrows the query results based on the elements’ creation dates."
    dateCreated: [String]
    "Narrows the query results based on the elements’ last-updated dates."
    dateUpdated: [String]
    "Narrows the query results based on the users’ email addresses."
    email: [String]
    "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
    enabledForSite: Boolean
    "Narrows the query results based on the users’ first names."
    firstName: [String]
    "Causes the query results to be returned in the order specified by the `id` argument."
    fixedOrder: Boolean
    "Narrows the query results based on the user group the users belong to."
    group: [QueryArgument]
    "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
    groupId: [QueryArgument]
    "Narrows the query results to only users that have (or don’t have) a user photo."
    hasPhoto: Boolean
    "Narrows the query results based on the elements’ IDs."
    id: [QueryArgument]
    "Causes the query results to be returned in reverse order."
    inReverse: Boolean
    "Narrows the query results based on the users’ last names."
    lastName: [String]
    "Sets the limit for paginated results."
    limit: Int
    "Sets the offset for paginated results."
    offset: Int
    "Sets the field the returned elements should be ordered by."
    orderBy: String
    "Determines which site should be selected when querying multi-site elements."
    preferSites: [QueryArgument]
    "Narrows the query results based on a reference string."
    ref: [String]
    "Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
    relatedTo: [QueryArgument]
    "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: [\"and\", ...ids]` should be used instead."
    relatedToAll: [QueryArgument]
    "Narrows the query results to elements that relate to an asset list defined with this argument."
    relatedToAssets: [AssetCriteriaInput]
    "Narrows the query results to elements that relate to a category list defined with this argument."
    relatedToCategories: [CategoryCriteriaInput]
    "Narrows the query results to elements that relate to an entry list defined with this argument."
    relatedToEntries: [EntryCriteriaInput]
    "Narrows the query results to elements that relate to a tag list defined with this argument."
    relatedToTags: [TagCriteriaInput]
    "Narrows the query results to elements that relate to a use list defined with this argument."
    relatedToUsers: [UserCriteriaInput]
    "Narrows the query results to only elements that match a search query."
    search: String
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    site: [String]
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    siteId: [QueryArgument]
    "Narrows the query results based on the unique identifier for an element-site relation."
    siteSettingsId: [QueryArgument]
    "Narrows the query results based on the elements’ slugs."
    slug: [String]
    "Narrows the query results based on the elements’ statuses."
    status: [String]
    "Narrows the query results based on the elements’ titles."
    title: [String]
    "Narrows the query results to only elements that have been soft-deleted."
    trashed: Boolean
    "Narrows the query results based on the elements’ UIDs."
    uid: [String]
    "Determines whether only elements with unique IDs should be returned by the query."
    unique: Boolean
    "Narrows the query results based on the elements’ URIs."
    uri: [String]
    "Narrows the query results based on the users’ usernames."
    username: [String]
}


"The `QueryArgument` scalar type represents a value to be using in Craft element queries. It can be an integer, a string, or a boolean value."
scalar QueryArgument

"The `DateTime` scalar type represents a point in time."
scalar DateTime

scalar ArrayType

"The `Number` scalar type represents a number that can be a float, an integer or a null value."
scalar Number